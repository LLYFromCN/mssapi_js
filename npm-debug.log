0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/node', '/usr/bin/npm', 'publish', '--tag', '1.0.0' ]
2 info using npm@1.4.28
3 info using node@v0.10.40
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /home/yubai/.npm/3a52ce78-.lock
10 verbose tar pack [ '/home/yubai/.npm/mss-sdk/1.0.0/package.tgz', '.' ]
11 verbose tarball /home/yubai/.npm/mss-sdk/1.0.0/package.tgz
12 verbose folder .
13 info prepublish mss-sdk@1.0.0
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /home/yubai/.npm/1f1177db-tar.lock
16 silly lockFile 0a8725bd-ai-npm-mss-sdk-1-0-0-package-tgz tar:///home/yubai/.npm/mss-sdk/1.0.0/package.tgz
17 verbose lock tar:///home/yubai/.npm/mss-sdk/1.0.0/package.tgz /home/yubai/.npm/0a8725bd-ai-npm-mss-sdk-1-0-0-package-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 0a8725bd-ai-npm-mss-sdk-1-0-0-package-tgz tar:///home/yubai/.npm/mss-sdk/1.0.0/package.tgz
21 silly lockFile 0a8725bd-ai-npm-mss-sdk-1-0-0-package-tgz tar:///home/yubai/.npm/mss-sdk/1.0.0/package.tgz
22 silly lockFile 22a1d355--yubai-npm-mss-sdk-1-0-0-package /home/yubai/.npm/mss-sdk/1.0.0/package
23 verbose lock /home/yubai/.npm/mss-sdk/1.0.0/package /home/yubai/.npm/22a1d355--yubai-npm-mss-sdk-1-0-0-package.lock
24 silly lockFile 22a1d355--yubai-npm-mss-sdk-1-0-0-package /home/yubai/.npm/mss-sdk/1.0.0/package
25 silly lockFile 22a1d355--yubai-npm-mss-sdk-1-0-0-package /home/yubai/.npm/mss-sdk/1.0.0/package
26 silly lockFile 3a52ce78- .
27 silly lockFile 3a52ce78- .
28 silly publish { name: 'mss-sdk',
28 silly publish   description: 'MSS SDK for JavaScript',
28 silly publish   version: '1.0.0',
28 silly publish   author:
28 silly publish    { name: 'Meituan Storage Service',
28 silly publish      url: 'http://mos.meituan.com/' },
28 silly publish   homepage: 'https://github.com/meituan/mssapi_js',
28 silly publish   devDependencies:
28 silly publish    { 'repl.history': '*',
28 silly publish      semver: '*',
28 silly publish      'coffee-script': '1.6.3',
28 silly publish      eslint: '*',
28 silly publish      cucumber: '*',
28 silly publish      coffeeify: '*',
28 silly publish      browserify: '3.x',
28 silly publish      'uglify-js': '2.x',
28 silly publish      mocha: '*',
28 silly publish      chai: '*',
28 silly publish      istanbul: '*' },
28 silly publish   dependencies:
28 silly publish    { 'mss-sdk-apis': '>= 1.0.0',
28 silly publish      xml2js: '0.2.6',
28 silly publish      xmlbuilder: '0.4.2' },
28 silly publish   main: 'lib/aws.js',
28 silly publish   directories: { test: 'test' },
28 silly publish   engines: { node: '>= 0.8.0' },
28 silly publish   repository: { type: 'git', url: 'git://github.com/meituan/mssapi_js' },
28 silly publish   bugs: { url: 'http://github.com/meituan/mssapi_js/issues' },
28 silly publish   licenses:
28 silly publish    [ { type: 'Apache 2.0',
28 silly publish        url: 'http://github.com/meituan/mssapi_js/raw/master/LICENSE.txt' } ],
28 silly publish   keywords: [ 's3', 'sdk', 'api', 'oss', 'mss', 'mos', 'meituan' ],
28 silly publish   scripts:
28 silly publish    { test: 'npm -s run-script lint && npm -s run-script unit && npm -s run-script buildertest && npm -s run-script browsertest && ([ -f configuration ] && npm -s run-script integration || true)',
28 silly publish      unit: 'istanbul test mocha -- test test/json test/model test/protocol test/query test/services test/signers test/xml',
28 silly publish      browsertest: 'rake browser:test',
28 silly publish      buildertest: 'mocha --compilers coffee:coffee-script -s 1000 -t 10000 dist-tools/test',
28 silly publish      integration: 'cucumber.js',
28 silly publish      lint: 'eslint --rulesdir eslint-rules lib',
28 silly publish      console: './scripts/console' },
28 silly publish   license: 'Apache 2.0',
28 silly publish   readme: 'mss-sdk-js\n==========\n\n美团云存储(MSS) SDK for Node.js\n\n### Installation\n\n\tnpm install mss-sdk\n\n### Usage\n  \n#### 初始化`MSS`\n\n```javascript\nvar MSS = require(\'mss-sdk\');\n```\n\n#### 配置\n\n##### 方法1:\n\n```javascript\n\n// 参考sample/config1.js\n\nvar config = new MSS.Config({\n\taccessKeyId: \'你的accessKey\', \n\tsecretAccessKey: \'你的secretKey\'\n});\n\n//全局生效:\nMSS.config = config;\n```\n\n##### 方法2:\n  \n创建一个json文件`config.json`:\n\n```javascript\n\n{\n\t"accessKeyId": "你的accessKey", \n\t"secretAccessKey": "你的secretKey"\n}\n```\n\n加载`config.json`:\n\n```javascript\n\n// 参考sample/config2.js\n\n//全局生效:\nMSS.config.loadFromPath(\'./config.json\');\n```\n  \n##### 方法3:\n\n```javascript\n\n// 参考sample/config3.js\n\nvar config = new MSS.Config({\n\taccessKeyId: \'你的accessKey\', \n\tsecretAccessKey: \'你的secretKey\'\n});\n\n//实例化:\nvar s3 = new MSS.S3();\n//当前实例生效:\ns3.config = config;\n```\n  \n##### 方法4:\n\n```javascript\n\n// 参考sample/config4.js\n\n//实例化,当前实例生效:\nvar s3 = new MSS.S3({\n  accessKeyId: \'你的accessKey\',\n  secretAccessKey: \'你的secretKey\'\n});\n```\n  \n#### 实例化\n\n##### 示例1:\n\n```javascript\n\nvar s3 = new MSS.S3();\n```\n  \n##### 示例2:\n\n```javascript\n\nvar mybucket = new MSS.S3({\n  accessKeyId: \'你的accessKey\',\n  secretAccessKey: \'你的secretKey\'\n});\n```\n  \n##### 示例3:\n\n```javascript\n\n// 参考sample/inst3.js\n\nvar mybucket = new MSS.S3({\n  accessKeyId: \'你的accessKey\',\n  secretAccessKey: \'你的secretKey\',\n  params:{\n    Bucket: \'mybucket\'\n  }\n});\n```\n  \n##### 示例4:\n\n```javascript\n\n// 参考sample/inst4.js\n\nvar mykey = new MSS.S3({\n  accessKeyId: \'你的accessKey\',\n  secretAccessKey: \'你的secretKey\',\n  params:{\n    Bucket: \'mybucket\',\n    Key: \'myObject\'\n  }\n});\n```\n\n#### 调用\n\n##### 创建一个bucket并上传一个文件:\n\n```javascript\n\n// 参考sample/create_bucket.js\n\nvar s3 = new MSS.S3({\n  accessKeyId: \'你的accessKey\',\n  secretAccessKey: \'你的secretKey\',\n  params:{\n    Bucket: \'myBucket\'\n  }\n});\n\ns3.createBucket(function() {\n  var data = {Key: \'Hello\', Body: \'Word!\'};\n  s3.putObject(data, function(err, data) {\n    if (err) {\n      console.log("Error uploading data: ", err);\n    } else {\n      console.log("Successfully uploaded data to %s/Hello", \'myBucket\');\n    }\n  });\n});\n```\n\n##### 列出所有bucket:\n\n```javascript\n\n// 参考sample/list_buckets.js\n\nvar s3 = new MSS.S3({\n  accessKeyId: \'你的accessKey\',\n  secretAccessKey: \'你的secretKey\'\n});\n\ns3.listBuckets(function(err, data) {\n\tif (err)\n\t\tconsole.log(err, err.stack);\n\telse\n\t\tconsole.log(data);\n});\n```\n\t\n##### 列出bucket中的文件:\n\n```javascript\n\n// 参考sample/list_objects.js\n\nvar s3 = new MSS.S3({\n  accessKeyId: \'你的accessKey\',\n  secretAccessKey: \'你的secretKey\'\n});\n\nvar params = {\n  Bucket: \'myBucket\',     //required\n  Delimiter: \'/\',         //用\'/\'折叠伪子目录\n  Marker: \'\',             //分页标签\n  MaxKeys: 100,           //最大成员数\n  Prefix: \'\'              //按前缀查询\n};\n\ns3.listObjects(params, function(err, data) {\n  if (err)\n    console.log(err, err.stack);\n  else\n    console.log(data);\n});\n```\n\t\n##### 下载文件示例1:\n\n```javascript\n\n// 参考sample/download1.js\n\nvar s3 = new MSS.S3({\n  accessKeyId: \'你的accessKey\',\n  secretAccessKey: \'你的secretKey\'\n});\n\nvar params = {\n  Bucket: \'myBucket\',\n  Key: \'myObject\'};\nvar file = require(\'fs\').createWriteStream(\'./download/file1\');\ns3.getObject(params).createReadStream().pipe(file);\n```\n\n##### 下载文件示例2:\n\n```javascript\n\n// 参考sample/download2.js\n\nvar s3 = new MSS.S3({\n  accessKeyId: \'你的accessKey\',\n  secretAccessKey: \'你的secretKey\'\n});\n\nvar params = {\n  Bucket: \'myBucket\',\n  Key: \'myObject\'};\nvar file = require(\'fs\').createWriteStream(\'./download/file2\');\n\ns3.getObject(params).on(\'httpData\', function(chunk) {\n\tfile.write(chunk); \n}).on(\'httpDone\', function() {\n\tfile.end();\n}).on(\'httpDownloadProgress\', function(progress) {\n\tconsole.log(progress);\n}).on(\'error\', function(error) {\n\tconsole.log(error);\n}).on(\'success\', function() {\n\tconsole.log(\'success\');\n}).on(\'httpHeaders\', function(statusCode, headers) {\n\tconsole.log(\'statusCode: \' + statusCode + "\\n", headers);\n}).send();\n```\n\t\n##### 上传文件示例1：\n\n```javascript\n\n// 参考sample/upload1.js\n\nvar s3 = new MSS.S3({\n  accessKeyId: \'你的accessKey\',\n  secretAccessKey: \'你的secretKey\'\n});\n\nvar file = require(\'fs\').createReadStream(\'./upload/file\');\n\nvar params = {\n  Bucket: \'myBucket\',\n  Key: \'upload/file1\',\n  Body: file\n};\n\ns3.putObject(params).on(\'httpHeaders\', function(statusCode, headers) {\n  console.log(headers);\n}).on(\'httpUploadProgress\', function(progress) {\n  console.log(progress);\n}).on(\'error\', function(error) {\n  console.log(error);\n}).on(\'success\', function() {\n  console.log(\'success\');\n}).send();\n```\n\t\n##### 上传文件示例2：\n\n```javascript\n\n// 参考sample/upload2.js\n\nvar s3 = new MSS.S3({\n  accessKeyId: \'你的accessKey\',\n  secretAccessKey: \'你的secretKey\'\n});\n\nvar fileBuffer = require(\'fs\').readFileSync(\'./upload/file\');\n\ns3.putObject({\n  Bucket: \'myBucket\',\n  Key: \'upload/file2\',\n  Body: fileBuffer\n}, function(error, response) {\n  if (error) {\n    console.log(error);\n  } else {\n    console.log(\'success\');\n  }\n});\n```\n\n##### 上传文件示例3：\n\n```javascript\n\n// 参考sample/upload3.js\n\nvar s3 = new MSS.S3({\n  accessKeyId: \'你的accessKey\',\n  secretAccessKey: \'你的secretKey\',\n  params:{\n    Bucket: \'myBucket\'\n  }\n});\n\nvar data = {Key: \'Hello\', Body: \'World!\'};\ns3.putObject(data, function(err, data) {\n  if (err) {\n    console.log("Error uploading data: ", err);\n  } else {\n    console.log("Successfully uploaded data to %s/Hello", \'myBucket\');\n  }\n});\n```\n\n##### 获取bucket的acl信息:\n\t\n```javascript\n\n// 参考sample/get_acl.js\n\nvar s3 = new MSS.S3({\n  accessKeyId: \'你的accessKey\',\n  secretAccessKey: \'你的secretKey\',\n  params:{\n    Bucket: \'myBucket\'\n  }\n});\n\ns3bucket.getBucketAcl(function(err, data) {\n\tif (err) {\n\t\tconsole.log(err);\t// an error occurred\n\t} else {\n\t\tconsole.log(data);\t// successful response\n\t}\n});\n```\n\n##### 设置bucket的acl信息:\n\t\n```javascript\n\n// 参考sample/put_acl.js\n\nvar s3 = new MSS.S3({\n  accessKeyId: \'你的accessKey\',\n  secretAccessKey: \'你的secretKey\'\n});\n\nvar params = {\n  Bucket: \'myBucket\',\n  ACL: \'private\'\n};\n\ns3.putBucketAcl(params, function(err, data) {\n  if (err) {\n    console.log(err);\n  } else {\n    console.log("set private success");\n    params["ACL"] = \'public-read\'\n    s3.putBucketAcl(params, function(err, data) {\n      if (err) {\n        console.log(err);\n      } else {\n        console.log("set public-read success");\n      }\n    });\n  }\n});\n```\n\n##### 删除一个文件:\n\n```javascript\n\n// 参考sample/delete_object.js\n\nvar s3 = new MSS.S3({\n  accessKeyId: \'你的accessKey\',\n  secretAccessKey: \'你的secretKey\'\n});\n\nvar params = {\n  Bucket: \'myBucket\',\n  Key: \'myObject\'\n};\n\ns3.deleteObject(params, function(err, data) {\n\tif (err) {\n\t\tconsole.log(err);\n\t} else {\n\t\tconsole.log("success");\n\t}\n});\n```\n\t\n##### 删除一个bucket:\n\n```javascript\n\n// 参考sample/delete_bucket.js\n\nvar s3 = new MSS.S3({\n  accessKeyId: \'你的accessKey\',\n  secretAccessKey: \'你的secretKey\'\n});\n\nvar params = {Bucket: \'myBucket\'};\n\ns3.deleteBucket(params, function(err, data) {\n\tif (err) {\n\t\tconsole.log(err);\n\t} else {\n\t\tconsole.log("success");\n\t}\n});\n```\n\t\n##### 获取一个带有签名的用于下载的url:\n\n```javascript\n\n// 参考sample/get_presign_url.js\n\nvar s3 = new MSS.S3({\n  accessKeyId: \'你的accessKey\',\n  secretAccessKey: \'你的secretKey\'\n});\n\n// This URL will expire in one minute (60 seconds)\nvar params = {\n  Bucket: \'myBucket\',\n  Key: \'myObject\',\n  Expires: 60\n};\n\nvar url = s3.getSignedUrl(\'getObject\', params);\nconsole.log("The URL to GET is [%s]", url);\n\nvar url = s3.getSignedUrl(\'headObject\', params);\nconsole.log("The URL to HEAD is [%s]", url);\n```\n\n##### 分片上传:\n\n```javascript\n\n// 代码较长请参考sample/multipart_upload.js\n```\n',
28 silly publish   readmeFilename: 'README.md',
28 silly publish   _id: 'mss-sdk@1.0.0',
28 silly publish   _shasum: '9f15ed88bc52fb0204425ad6b6374b6d1e1aa5c1',
28 silly publish   _from: '.' }
29 verbose request where is /mss-sdk
30 verbose request registry https://registry.npmjs.org/
31 verbose request id 661e8ae99adfca9d
32 verbose url raw /mss-sdk
33 verbose url resolving [ 'https://registry.npmjs.org/', './mss-sdk' ]
34 verbose url resolved https://registry.npmjs.org/mss-sdk
35 verbose request where is https://registry.npmjs.org/mss-sdk
36 info trying registry request attempt 1 at 16:46:35
37 http PUT https://registry.npmjs.org/mss-sdk
38 http 403 https://registry.npmjs.org/mss-sdk
39 verbose headers { 'content-type': 'application/json',
39 verbose headers   'cache-control': 'max-age=60',
39 verbose headers   'content-length': '128',
39 verbose headers   'accept-ranges': 'bytes',
39 verbose headers   date: 'Sun, 08 Nov 2015 08:53:30 GMT',
39 verbose headers   via: '1.1 varnish',
39 verbose headers   connection: 'keep-alive',
39 verbose headers   'x-served-by': 'cache-hkg6822-HKG',
39 verbose headers   'x-cache': 'MISS',
39 verbose headers   'x-cache-hits': '0',
39 verbose headers   'x-timer': 'S1446972808.875842,VS0,VE1696' }
40 error publish Failed PUT 403
41 error Error: "You cannot publish over the previously published version 1.0.0. Try bumping the version to 2.0.0" : mss-sdk
41 error     at RegClient.<anonymous> (/usr/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:308:14)
41 error     at Request._callback (/usr/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:246:65)
41 error     at Request.self.callback (/usr/lib/node_modules/npm/node_modules/request/request.js:236:22)
41 error     at Request.emit (events.js:98:17)
41 error     at Request.<anonymous> (/usr/lib/node_modules/npm/node_modules/request/request.js:1142:14)
41 error     at Request.emit (events.js:117:20)
41 error     at IncomingMessage.<anonymous> (/usr/lib/node_modules/npm/node_modules/request/request.js:1096:12)
41 error     at IncomingMessage.emit (events.js:117:20)
41 error     at _stream_readable.js:944:16
41 error     at process._tickCallback (node.js:448:13)
42 error If you need help, you may report this *entire* log,
42 error including the npm and node versions, at:
42 error     <http://github.com/npm/npm/issues>
43 error System Linux 2.6.32-358.2.1.el6.x86_64
44 error command "/usr/bin/node" "/usr/bin/npm" "publish" "--tag" "1.0.0"
45 error cwd /home/yubai/dev/s3/client/s3sdk/mssapi_js
46 error node -v v0.10.40
47 error npm -v 1.4.28
48 verbose exit [ 1, true ]
